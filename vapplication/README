//=======================================================================================
//      VApplication README
//=======================================================================================

    VApplication -- Собирательный класс для задач уровня приложения. В будущем
планируется использовать его на подобии Qt::QApplication как агрегатор основного потока.


    На 25-09-2018 в классе присутствуют:

 - VApplication::Args -- парсер аргументов. Им планируется заменить VApp_Args_Parser.
        app_name();       //  the_exec_file
        app_path();       //  path/to/exec/
        full_app_name();  //  path/to/exec/the_exec_file

        // Константное чтение
        has_flag    ( name );
        std_value   ( name );
        std_value_or( name, default_val );

        // Выборка из аргуентов
        has_flag    ( name );
        std_value   ( name );
        std_value_or( name, default_val );

        // Что осталось
        remain();

        //  Бросается исключением, когда что-либо осталось. Удобно сообщать о неправильно
        //  написанных и нераспознанных аргументах.
        void throw_verror_if_not_empty();


 - VApplication::Pid -- сохранялка пида на замену VPid_Saver. Удаляет файлик с пидом по
        завершении работы, что приятно :-).

        static pid();
        store( path, fname );


//=======================================================================================
//      VApplication README
//=======================================================================================

